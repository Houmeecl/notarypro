import{a as t}from"./index-xsH4HHeE.js";var n={};class o{async validateSignature(e,r){try{return console.log("Validando firma...",{signatureLength:e.length,signerInfo:r}),{valid:!0,score:.92,signatureId:`sig-${Date.now()}`,message:"Firma validada correctamente"}}catch(a){return console.error("Error validating signature:",a),{valid:!1,score:0,message:a instanceof Error?a.message:"Error desconocido al validar firma"}}}async storeSignature(e){try{const r={id:`sig-${Date.now()}`,timestamp:new Date};return console.log("Firma almacenada:",{signatureId:r.id,timestamp:r.timestamp,signerId:e.signerId,documentId:e.documentId}),r}catch(r){throw console.error("Error storing signature:",r),new Error("No se pudo almacenar la firma")}}async verifyStoredSignature(e){try{return{valid:!0,score:1,signatureId:e,message:"Firma verificada correctamente"}}catch(r){return console.error("Error verifying signature:",r),{valid:!1,score:0,message:"No se pudo verificar la firma"}}}async getSignatureData(e){try{return null}catch(r){return console.error("Error retrieving signature:",r),null}}async callExternalSignatureAPI(e){try{const r=await t.post("https://api.example.com/validate-signature",{signature:e,apiKey:n.SIGNATURE_API_KEY});return{valid:r.data.valid,score:r.data.score,signatureId:r.data.id,message:r.data.message}}catch(r){throw console.error("Error calling external signature API:",r),new Error("No se pudo validar la firma mediante el servicio externo")}}}const c=new o;export{c as signatureService};
