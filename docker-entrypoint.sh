#!/bin/sh
set -e

echo "üöÄ Iniciando NotaryVecino en contenedor Docker..."

# Verificar variables de entorno cr√≠ticas
if [ -z "$DATABASE_URL" ]; then
    echo "‚ùå ERROR: DATABASE_URL no est√° configurada"
    exit 1
fi

# Esperar a que la base de datos est√© lista
echo "‚è≥ Esperando conexi√≥n a base de datos..."
until node -e "
const { Client } = require('pg');
const client = new Client({ connectionString: process.env.DATABASE_URL });
client.connect()
  .then(() => { console.log('‚úÖ Base de datos conectada'); client.end(); })
  .catch(err => { console.log('‚ùå Error DB:', err.message); process.exit(1); });
" 2>/dev/null; do
    echo "‚è≥ Esperando base de datos..."
    sleep 5
done

# Ejecutar migraciones si es necesario
if [ "$RUN_MIGRATIONS" = "true" ]; then
    echo "üîÑ Ejecutando migraciones..."
    # Aqu√≠ se ejecutar√≠an las migraciones si est√°n implementadas
fi

# Ejecutar semillas si es necesario
if [ "$RUN_SEEDS" = "true" ]; then
    echo "üå± Ejecutando semillas de base de datos..."
    node server/seeds/seed.js || echo "‚ö†Ô∏è Semillas ejecutadas parcialmente"
fi

# Crear directorios necesarios
mkdir -p uploads/documents uploads/images
mkdir -p docs
mkdir -p logs

# Mostrar informaci√≥n del entorno
echo "‚ÑπÔ∏è Informaci√≥n del entorno:"
echo "  NODE_ENV: $NODE_ENV"
echo "  PORT: $PORT"
echo "  Database: $(echo $DATABASE_URL | sed 's/:[^:]*@/:***@/')"
echo "  JWT configurado: $([ -n "$JWT_SECRET" ] && echo "‚úÖ" || echo "‚ùå")"
echo "  Agora configurado: $([ -n "$AGORA_APP_ID" ] && echo "‚úÖ" || echo "‚ùå")"
echo "  GetAPI configurado: $([ -n "$GETAPI_API_KEY" ] && echo "‚úÖ" || echo "‚ùå")"
echo "  AWS S3 configurado: $([ -n "$AWS_ACCESS_KEY_ID" ] && echo "‚úÖ" || echo "‚ùå")"

# Iniciar aplicaci√≥n
echo "üöÄ Iniciando servidor NotaryVecino..."
exec node dist/index.js